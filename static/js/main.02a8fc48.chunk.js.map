{"version":3,"sources":["actions/actions.js","App.js","serviceWorker.js","reducers/search.reducer.js","reducers/index.js","index.js","store/configure-store.js"],"names":["updateMovieList","movies","type","payload","updateCurrentMovie","movie","updateMovie","removeMovie","id","addMovie","library","add","faTrash","faEdit","faPlusSquare","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","closeEdit","setState","showEditModal","openEdit","closeDelete","showDeleteModal","openDelete","closeAdd","showAddModal","openAdd","state","newMovie","uuidv1","currentMovie","_this2","fetch","then","res","json","result","Search","calls","forEach","item","url","push","concat","imdbID","Promise","all","props","catch","err","console","log","arguments","length","undefined","Title","Year","Runtime","Director","Genre","Poster","_this3","map","i","react_default","a","createElement","ListGroupItem","style","height","key","className","width","src","display","onClick","e","react_fontawesome_index_es","float","icon","marginRight","title","_runtime","director","genere","year","_this4","modalStyle","position","zIndex","top","bottom","left","right","backdropStyle","objectSpread","backgroundColor","opacity","dialogStyle","transform","border","boxShadow","padding","marginBottom","marginTop","preventDefault","Modal","aria-labelledby","show","onHide","required","onBlur","target","value","Button","addNewMovie","ListGroup","renderList","defaultValue","editMovie","Component","connect","ownProps","search","dispatch","bindActionCreators","Boolean","window","location","hostname","match","initState","rootReducer","combineReducers","action","toConsumableArray","filter","initialState","store","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02a8fc48.chunk.js","sourcesContent":["export const updateMovieList = (movies) => {\n    return {\n        type: 'updateMovieList',\n        payload: movies\n    }\n};\n\nexport const updateCurrentMovie = (movie) => {\n    return {\n        type: 'updateCurrentMovie',\n        payload: movie\n    }\n};\n\n\nexport const updateMovie = (movie) => {\n    return {\n        type: 'updateMovie',\n        payload: movie\n    }\n};\n\n\n\nexport const removeMovie = (id) => {\n    return {\n        type: 'removeMovie',\n        payload: id\n    }\n};\n\n\nexport const addMovie = (movie) => {\n    return {\n        type: 'addMovie',\n        payload: movie\n    }\n};","import {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport React, { Component } from 'react';\nimport './App.css';\nimport {updateMovieList} from './actions/actions'\nimport {updateCurrentMovie} from './actions/actions'\nimport {updateMovie} from './actions/actions'\nimport {removeMovie} from './actions/actions'\nimport {addMovie} from './actions/actions'\nimport {Modal,ListGroup,ListGroupItem, Button} from 'react-bootstrap';\nimport uuidv1 from 'uuid/v1';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash,faEdit,faPlusSquare } from '@fortawesome/free-solid-svg-icons'\nimport './styles.css';\n\nlibrary.add(faTrash)\nlibrary.add(faEdit)\nlibrary.add(faPlusSquare)\n\nconst fetchCall = (url) => {\n    return fetch(url)\n        .then(res => res.json());\n};\n\nclass App extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            showEditModal: false,\n            showDeleteModal: false,\n            showAddModal: false,\n            newMovie: {id: uuidv1()},\n            id: null,\n            currentMovie: {}\n        }\n    }\n\n    closeEdit  =()=> {\n        this.setState({ showEditModal: false });\n    }\n    openEdit =()=> {\n        this.setState({ showEditModal: true});\n    }\n\n    closeDelete =()=> {\n        this.setState({ showDeleteModal: false });\n    }\n    openDelete =()=>{\n        this.setState({ showDeleteModal: true });\n    }\n\n    closeAdd =()=>{\n        this.setState({ showAddModal: false });\n    }\n    openAdd =()=>{\n        this.setState({ showAddModal: true });\n    }\n\n    componentDidMount() {\n        fetch(\"http://www.omdbapi.com/?s=batman&apikey=ebfb52b7\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    const { Search } = result;\n                    const calls = [];\n                    Search.forEach(item => {\n                        calls.push(fetchCall(`http://www.omdbapi.com/?i=${item.imdbID}&apikey=ebfb52b7`));\n                    });\n                    Promise.all(calls)\n                        .then(movies => this.props.updateMovieList(movies)\n                        ).catch(err => console.log(err));\n                }\n            )\n    }\n\n    editMovie(id = this.state.currentMovie.id,\n              Title = this.state.currentMovie.Title,\n              Year = this.state.currentMovie.Year,\n              Runtime = this.state.currentMovie.Runtime,\n              Director = this.state.currentMovie.Director,\n              Genre = this.state.currentMovie.Genre,\n              Poster = this.state.currentMovie.Poster) {\n            this.props.updateMovie({id, Title, Year, Runtime, Director, Genre, Poster});\n    }\n\n    addNewMovie(newMovie){\n        this.props.addMovie(newMovie);\n        this.closeAdd();\n    }\n\n    renderList() {\n\n        return this.props.movies.map((movie,i) => {\n\n            return (\n                <ListGroupItem style={{height:'60px'}}\n                    key={'user'+i}>\n                    <span className={'liFields'} ><img width='20px'  src={movie.Poster} /></span>\n                    <span className={'liFields'}>{movie.Title}</span>\n                    <span className={'liFields'}> {movie.Year}</span>\n                    <span className={'liFields'}> {movie.Runtime}</span>\n                    <span className={'liFields'}> {movie.Director}</span>\n                    <span className={'liFields'}> {movie.Genre}</span>\n                    <div style={{display:'inline'}} onClick={e=>{\n                        this.setState({currentMovie: movie});\n                        this.openEdit();\n                    }\n                    }>\n                        <FontAwesomeIcon style={{float:'right'}} icon=\"edit\" />\n                    </div>\n\n                    <div style={{display:'inline'}} onClick={e => {\n                        this.setState({id: movie.id});\n                        this.openDelete();\n                    }\n\n                    }> <FontAwesomeIcon style={{float:'right', marginRight:'10px'}} icon=\"trash\" />\n                    </div>\n                </ListGroupItem>\n            );\n        });\n    }\n\n    render() {\n\n        const modalStyle = {\n            position: 'fixed',\n            zIndex: 1040,\n            top: 0, bottom: 0, left: 0, right: 0\n        };\n\n        const backdropStyle = {\n            ...modalStyle,\n            zIndex: 'auto',\n            backgroundColor: '#000',\n            opacity: 0.5\n        };\n\n\n        const dialogStyle = function() {\n            let top = 50\n            let left = 50\n\n            return {\n                position: 'absolute',\n                width: 400,\n                top: top + '%', left: left + '%',\n                transform: `translate(-${top}%, 0%)`,\n                border: '1px solid #e5e5e5',\n                backgroundColor: 'white',\n                boxShadow: '0 5px 15px rgba(0,0,0,.5)',\n                padding: 20\n            };\n        };\n\n        let title;\n        let _runtime;\n        let director;\n        let genere;\n        let year;\n\n        return (\n            <div className=\"App\">\n\n                <div style={{marginBottom:'40px',marginTop:'20px',}} onClick={e=>{\n                    e.preventDefault()\n                    this.setState({showAddModal:true})\n\n                }}>\n                    <FontAwesomeIcon icon=\"plus-square\" /> Add Movie\n                </div>\n\n                <Modal\n                    aria-labelledby='modal-label'\n                    style={modalStyle}\n                    backdropStyle={backdropStyle}\n                    show={this.state.showAddModal}\n                    onHide={this.closeAdd}\n                >\n                    <div style={dialogStyle()} >\n                        <h4 id='modal-label'>Movie Details:</h4>\n\n                        <form >\n\n                            <div className={'modalForm'}>\n                                <label className={'labelSpace'}>Title:</label>\n                                <input required={true} type={'text'}\n                                       onBlur={(e)=>\n                                       {this.setState({newMovie: {\n                                               ...this.state.newMovie,\n                                               Title: e.target.value}})}\n\n                                       }></input>\n                            </div>\n                            <div className={'fieldsSpace'}>\n                                <label className={'labelSpace'}>Year:</label>\n                                <input required={true} type={'text'}\n                                       onBlur={(e)=> {this.setState({newMovie: {\n                                               ...this.state.newMovie,\n                                               Year: e.target.value}})}}\n                                ></input>\n                            </div>\n                            <div className={'fieldsSpace'}>\n                                <label className={'labelSpace'}>Runtime:</label>\n                                <input required={true} type={'text'}\n                                       onBlur={(e)=> {this.setState({newMovie: {\n                                               ...this.state.newMovie,\n                                               Runtime: e.target.value}})}}\n                                ></input>\n                            </div>\n                            <div className={'fieldsSpace'}>\n                                <label className={'labelSpace'}>Director:</label>\n                                <input required={true} type={'text'}\n                                       onBlur={(e)=> {this.setState({newMovie: {\n                                               ...this.state.newMovie,\n                                               Director: e.target.value}})}}\n                                ></input>\n                            </div>\n                            <div>\n                                <label className={'labelSpace'}>Genre:</label>\n                                <input required={true} type={'text'}\n                                       onBlur={(e)=> {this.setState({newMovie: {\n                                               ...this.state.newMovie,\n                                               Genre: e.target.value}})}}\n                                ></input>\n                                <div className={'btnSpace'}>\n                                    <Button className={'labelSpace'} onClick={(e)=>{\n                                        e.preventDefault();\n                                        this.addNewMovie(this.state.newMovie);\n                                    }}>Add Movie</Button>\n                                    <Button onClick={(e)=>{\n                                        this.closeAdd();\n                                    }}>Cancel</Button>\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n                </Modal>\n\n\n\n                {this.props.movies.length > 0 &&\n\n                <ListGroup>\n\n                   {this.renderList()}\n                </ListGroup>\n                }\n\n\n                <Modal\n                    aria-labelledby='modal-label'\n                    style={modalStyle}\n                    backdropStyle={backdropStyle}\n                    show={this.state.showEditModal}\n                    onHide={this.closeEdit}\n                >\n                    <div style={dialogStyle()} >\n                        <h4 id='modal-label'>Movie details:</h4>\n                        <form >\n\n                            <div className={'modalForm'}>\n                                <label className={'labelSpace'}>Title:</label>\n                                <input type={'text'} defaultValue={this.state.currentMovie.Title}\n                                       onBlur={(e)=> {\n                                           title = e.target.value\n                                       }\n                                       }></input>\n                            </div>\n                            <div className={'fieldsSpace'}>\n                                <label className={'labelSpace'}>Year:</label>\n                                <input type={'text'} defaultValue={this.state.currentMovie.Year}\n                                       onBlur={(e)=> {year = e.target.value}}\n                                ></input>\n                            </div>\n                            <div className={'fieldsSpace'}>\n                                <label className={'labelSpace'}>Runtime:</label>\n                                <input type={'text'} defaultValue={this.state.currentMovie.Runtime}\n                                       onBlur={(e)=> { _runtime = e.target.value }}\n                                ></input>\n                            </div>\n                            <div className={'fieldsSpace'}>\n                                <label className={'labelSpace'}>Director:</label>\n                                <input type={'text'} defaultValue={this.state.currentMovie.Director}\n                                       onBlur={(e)=> { director = e.target.value }}\n                                ></input>\n                            </div>\n                            <div>\n                                <label className={'labelSpace'}>Genre:</label>\n                                <input type={'text'} defaultValue={this.state.currentMovie.Genre}\n                                       onBlur={(e)=> { genere = e.target.value}}\n                                ></input>\n                                <div className={'btnSpace'}>\n                                    <Button className={'labelSpace'}\n                                        onClick={e=>{\n                                            e.preventDefault();\n                                            this.editMovie(this.state.currentMovie.id, title, year, _runtime, director, genere);\n                                            this.closeEdit();\n                                        }\n                                        }\n                                    >Save</Button>\n                                    <Button onClick={(e)=>{\n                                        this.closeEdit();\n                                    }}>Cancel</Button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </Modal>\n\n                <Modal\n                    aria-labelledby='modal-label'\n                    style={modalStyle}\n                    backdropStyle={backdropStyle}\n                    show={this.state.showDeleteModal}\n                    onHide={this.closeDelete}\n                >\n                    <div style={dialogStyle()} >\n                        <h4 id='modal-label'>Are you sure you want to delete this movie?</h4>\n\n                        <div className={'btnSpace'}>\n                        <Button className={'labelSpace'} onClick={(e)=>{\n                            e.preventDefault();\n                            this.props.removeMovie(this.state.id);\n                            this.closeDelete();\n                        }}>Delete </Button>\n                        <Button  onClick={(e)=>{\n                            e.preventDefault();\n                            this.setState({showDeleteModal:false}\n                            )\n                        }\n                        }>Cancel</Button>\n                        </div>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        movies: state.search.movies,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // actions:\n        updateMovieList: bindActionCreators(updateMovieList, dispatch),\n        updateCurrentMovie: bindActionCreators(updateCurrentMovie, dispatch),\n        updateMovie: bindActionCreators(updateMovie, dispatch),\n        removeMovie: bindActionCreators(removeMovie, dispatch),\n        addMovie: bindActionCreators(addMovie, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import uuidv1 from \"uuid/v1\";\n\nconst initState={\n    movies:[],\n};\n//\nexport default function searchReducer(state = initState, action) {\n    switch (action.type) {\n\n        case 'updateMovieList':\n            const movies = action.payload.map((movie)=> { //uuid lib\n                return {\n                    id : uuidv1(),\n                    Title: movie.Title,\n                    Year: movie.Year,\n                    Director: movie.Director,\n                    Genre: movie.Genre,\n                    Runtime: movie.Runtime,\n                    Poster: movie.Poster || ''\n                }\n            });\n            return {movies: movies};\n        case 'addMovie':\n            const updatedMovies = [...state.movies, action.payload];\n\n            return {movies: updatedMovies};\n        case 'removeMovie':\n            const filtered = state.movies.filter(movie => movie.id !== action.payload);\n\n            return {movies: filtered};\n        case 'updateMovie':\n            const updatedMovieList = state.movies.map(movie => {\n\n                if (movie.id === action.payload.id) {\n                    movie = action.payload;\n                }\n                return movie;\n            });\n            return {movies: updatedMovieList};\n           default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport search from './search.reducer.js';\n\nconst rootReducer = combineReducers({\n    search\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configure-store';\nconst store = configureStore({});\n\nReactDOM.render(\n    <Provider className=\"full-height\" store={store}>\n        <App />\n    </Provider>, document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk, reduxImmutableStateInvariant())\n    );\n}"],"sourceRoot":""}